name: MIRAI Analysis

on:  workflow_dispatch

jobs:
  mirai:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Verify Nightly Toolchain (Optional)
    - name: Verify Nightly Toolchain
      run: |
        rustup show

    - name: Install Nightly Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        
    - name: Locate Missing Library
      run: |
        find / -name "librustc_driver-8e42d501a7efdfb9.so" 2>/dev/null
      shell: bash

    - name: Install MIRAI
      env:  # Update path if necessary (see troubleshooting)
        LD_LIBRARY_PATH: /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib:$LD_LIBRARY_PATH
      run: |
        rm -rf MIRAI
        git clone https://github.com/facebookexperimental/MIRAI.git
        cd MIRAI
        cargo install --locked --path ./checker
        echo "Installed MIRAI version:"
        ./target/release/mirai --version

    - name: Run MIRAI (Attempt 1)
      run: |
        RUSTFLAGS="-Z always_encode_mir" cargo mirai
        echo "MIRAI analysis complete (attempt 1)."

    # Alternative Library Loading (Optional)
    - name: Locate Missing Library (Optional)
      run: |
        locate librustc_driver-8e42d501a7efdfb9.so  # Update library name if necessary

    - name: Run MIRAI (Attempt 2 - Optional)
      # Update PATH_TO_SHARED_LIBRARY_DIRECTORY with the actual path from previous step
      run: |
        /lib/ld-linux.so.2 --library-path PATH_TO_SHARED_LIBRARY_DIRECTORY ./MIRAI/target/release/mirai
        echo "MIRAI analysis complete (attempt 2)."

    # Alternative Library Loading (attempt 3 - Optional)
    - name: Install MIRAI with adjusted LD_LIBRARY_PATH (Optional)
      env:
        LD_LIBRARY_PATH: /path/to/library_dir:$LD_LIBRARY_PATH  # Update path if necessary
      run: |
        git clone https://github.com/facebookexperimental/MIRAI.git
        cd MIRAI
        cargo install --locked --path ./checker
        echo "Installed MIRAI version:"
        ./target/release/mirai --version

    - name: Run MIRAI (Attempt 3 - Optional)
      run: |
        RUSTFLAGS="-Z always_encode_mir" cargo mirai
        echo "MIRAI analysis complete (attempt 3)."

    - name: Check MIRAI Output
      run: |
        # Add a step to check MIRAI's output, potentially failing the job if issues are detected.
        # This step is highly customizable depending on how you want to handle MIRAI's findings.
        echo "Check your MIRAI output for any action items."
